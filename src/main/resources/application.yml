# ============================================
# HEALTHCARE MVP APPLICATION CONFIGURATION
# ============================================

spring:
  # Application Configuration
  application:
    name: healthcare-mvp
  profiles:
    active: local

  # Mail Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: false

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://healthhorizon-db.cy5cs4aqyhju.us-east-1.rds.amazonaws.com:5432/healthcare_mvp_db}
    username: ${DATABASE_USERNAME:healthcare_mvp_user}
    password: ${DATABASE_PASSWORD:SecurePass2025!@#}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 60000
      connection-timeout: 30000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      validation-timeout: 5000
      connection-test-query: SELECT 1

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: false
    open-in-view: false

  # Security Configuration
  security:
    require-ssl: false

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  http2:
    enabled: true
  error:
    include-message: always
    include-binding-errors: always

# Custom Application Properties
app:
  # CORS Configuration
  cors:
    allowed-origins:
      - "http://localhost:3000"
      - "https://localhost:3000"
      - "http://127.0.0.1:3000"
      - "http://localhost:3001"
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  # JWT Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:ThisIsAVeryLongSecretKeyForHS512AlgorithmThatIsAtLeast64BytesLong1234567890123456789}
      expiration: ${JWT_EXPIRATION:86400} # 24 hours in seconds
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800} # 7 days in seconds
      blocklist:
        enabled: true

  # Business Configuration
  business:
    commission:
      default-rate: 20.0
      max-rate: 30.0

  # Notification Configuration
  notification:
    email:
      enabled: ${EMAIL_NOTIFICATIONS_ENABLED:true}
    sms:
      enabled: ${SMS_NOTIFICATIONS_ENABLED:false}

# Logging Configuration
logging:
  level:
    com.healthcare.mvp: ${LOG_LEVEL_APP:INFO}
    com.healthcare.mvp.auth: ${LOG_LEVEL_AUTH:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.web: ${LOG_LEVEL_WEB:WARN}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_PARAMS:WARN}
    com.zaxxer.hikari: ${LOG_LEVEL_HIKARI:WARN}
    root: ${LOG_LEVEL_ROOT:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:logs/healthcare-mvp.log}

# Management & Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      cors:
        allowed-origins:
          - "http://localhost:3000"
          - "https://localhost:3000"
        allowed-methods: GET,POST
        allowed-headers: "*"
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true

# Application Info
info:
  app:
    name: Healthcare MVP
    description: Comprehensive Healthcare Management System
    version: 1.0.0
    developer: Sethna Kola
    build-timestamp: ${BUILD_TIMESTAMP:unknown}

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  # Development-specific database (if different)
  datasource:
    url: ${DEV_DATABASE_URL:jdbc:postgresql://localhost:5432/healthcare_mvp_dev}
    username: ${DEV_DATABASE_USERNAME:healthcare_dev}
    password: ${DEV_DATABASE_PASSWORD:dev_password}

  # Development JPA settings
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

# Development logging - more verbose
logging:
  level:
    com.healthcare.mvp: DEBUG
    com.healthcare.mvp.auth: TRACE
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  # Production security settings
  security:
    require-ssl: true

  # Production JPA settings
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false

# Production CORS (more restrictive)
app:
  cors:
    allowed-origins:
      - "${PROD_FRONTEND_URL:https://yourdomain.com}"
    allow-credentials: true

# Production logging - less verbose
logging:
  level:
    com.healthcare.mvp: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN
    root: WARN
  file:
    name: /var/log/healthcare-mvp/application.log

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

  # Test database
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

  # Test JWT settings (shorter expiration for testing)
app:
  security:
    jwt:
      expiration: 300 # 5 minutes for testing
      refresh-expiration: 600 # 10 minutes for testing

# Test logging
logging:
  level:
    com.healthcare.mvp: DEBUG
    org.springframework.security: DEBUG